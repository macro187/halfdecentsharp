

    Resbian

    "A command-line .NET resource tool that doesn't suck"


--------------------------------------------------------------------------------


    Copyright (c) 2007, 2008, 2009, 2010
    Ron MacNeil <macro187 AT users DOT sourceforge DOT net>

    Permission to use, copy, modify, and distribute this software for any
    purpose with or without fee is hereby granted, provided that the above
    copyright notice and this permission notice appear in all copies.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.


--------------------------------------------------------------------------------


x.  Introduction

    Resbian is a command-line tool for performing tasks related to
    localisable embedded resources.  Currently it only peforms one kind
    of task.

    "compile"

        The "compile" subcommand collects localised assets in source
        form -- text files, image files, etc. -- and compiles them into
        a special binary file format suitable for embedding into .NET
        assemblies.  In other words, it's a replacement for the .NET
        "resgen" program that works directly from source assets instead
        of .resx files.


x.  Review of Localisable Resources in .NET

    The processes, mechanisms, and terminology surrounding embedded
    resources in .NET are complicated and sparsely documented.
    Following is a breakdown of how embedded resources work in .NET.


    Resource

        An external read-only object of any .NET type retrieved by name
        at run time.


    Resource set

        A uniquely-keyed collection of resources.


    .resources file format [1]

        A binary file format containing a resource set, usually with the
        filename extension ".resources".


    ResourceReader and ResourceWriter classes [2] [3]

        Base Class Library classes that can read and write the
        .resources file format.  Internally,
        System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
        is used to convert objects to and from a binary format.  [4]


    .resx file format [5]

        An XML file format containing a resource set, usually with the
        filename extension ".resx".  Generally, simple types of
        resources like strings and numbers are represented as text, and
        more complicated types are represented as base64-encoded binary.


    ResXResourceReader and ResXResourceWriter classes [6] [7]

        Base Class Library classes that can read and write the .resx
        file format.


    resgen program [8] [9]

        A tool that can transform .resx files into .resource files and
        vice-versa.


    ResourceSet and ResXResourceSet classes [10] [11]

        Base Class Library classes that provide access to resource sets
        through an interface resembling a read-only string-to-object
        dictionary.

        ResourceSet uses ResourceReader to access resources in
        .resources file format.

        ResXResourceSet uses ResXResourceReader to access resources in
        .resx file format.


    Embedded file

        A named, read-only byte blob embedded in an assembly via the
        linker's /embed switch or the compiler's (confusingly-named)
        /resource switch.  Embedded files are sometimes referred to as
        "embedded resources" leading to confusion with individual
        resource objects encoded in .resources or .resx files.  Embedded
        files are accessed at run time as read-only System.IO.Stream
        objects retrieved using
        System.Reflection.Assembly.GetManifestResourceStream().  [12]
        Note that the Microsoft documentation sometimes treats this
        topic in a way that suggests that embedded files must be
        resource-related, which is not the case.  Embedded files are
        just named bags of bytes.


    Resource Embedding Scheme

        Each resource "belongs" to the type where it is used.
        .resources files are embedded in assemblies, each containing
        resources in one language for one type in that assembly.

        The embedded .resources files adhere to a naming convention
        indicating the language and owning type of the resources
        contained therein:

            <Namespace>.<Type>[.<culture>].resources

        The omission of the culture from the filename indicates the
        default set of resources for the type, or its "neutral
        resources".  (Note this has no connection to "neutral cultures"
        i.e. non-country-specific cultures e.g. "en" instead of "en_US")

        The general idea is to have a full set of default resources,
        plus overrides for some or all of them in various languages.

        An example assembly containing three types spanning two
        namespaces, each with default resources plus some japanese,
        french, and Canadian french overrides might look like:

            MyAssembly.dll

                Types:
                -   NamespaceA.TypeA
                -   NamespaceA.TypeB
                -   NamespaceB.TypeA

                Embedded Files:
                -   NamespaceA.TypeA.resources
                -   NamespaceA.TypeA.ja.resources
                -   NamespaceA.TypeA.fr_FR.resources
                -   NamespaceA.TypeA.fr_CA.resources
                -   NamespaceA.TypeB.resources
                -   NamespaceA.TypeB.ja.resources
                -   NamespaceA.TypeB.fr_FR.resources
                -   NamespaceA.TypeB.fr_CA.resources
                -   NamespaceB.TypeA.resources
                -   NamespaceB.TypeA.ja.resources
                -   NamespaceB.TypeA.fr_FR.resources
                -   NamespaceB.TypeA.fr_CA.resources


    ResourceManager [13]

        An object used at runtime to retrieve embedded resources
        belonging to a particular type.  Resources are requested by
        name, and ResourceManager attempts to locate the most
        appropriate variation of the named resource for the current (or
        a specified) language.  The "current" language is indicated by
        System.Threading.Thread.CurrentThread.CurrentUICulture.

        ResourceManager implementes a simple fallback mechanism whereby
        "parent" cultures are checked if a requested resource is not
        found for the exact culture specified.

        (TODO: Reverse-engineer and document the exact fallback process,
        including how it is affected by the presence of
        System.Resources.NeutralResourcesLanguageAttribute on the
        assembly)


    [1] "Resources in .Resources File Format",
        http://msdn.microsoft.com/en-us/library/zew6azb7.aspx

    [2] "ResourceReader Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resourcereader.aspx

    [3] "ResourceWriter Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resourcewriter.aspx

    [4] Mono ResourceWriter source code,
        http://github.com/mono/mono/blob/master/mcs/class/corlib/
        System.Resources/ResourceWriter.cs#L218

    [5] "Resources in .resx File Format",
        http://msdn.microsoft.com/en-us/library/ekyft91f.aspx

    [6] "ResXResourceReader Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resxresourcereader.aspx

    [7] "ResXResourceWriter Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resxresourcewriter.aspx

    [8] "Resgen.exe (Resource File Generator)",
        http://msdn.microsoft.com/en-us/library/ccec7sz1.aspx

    [9] Mono resgen(1) man page,
        http://www.go-mono.com/docs/index.aspx
        ?tlink=32@man%3aresgen%281%29

   [10] "ResourceSet Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resourceset.aspx

   [11] "ResXResourceSet Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resxresourceset.aspx

   [12] "Assembly.GetManifestResourceStream Method (String)",
        http://msdn.microsoft.com/en-us/library/xc4235zt.aspx

   [13] "ResourceManager Class",
        http://msdn.microsoft.com/en-us/library/
        system.resources.resourcemanager.aspx


